<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.5//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.secondhandauctions.dao.ProductDao">

    <!--  상품 등록  -->
    <insert id="registerProduct" useGeneratedKeys="true" keyProperty="productId" parameterType="com.secondhandauctions.vo.ProductVo" >

        insert into product
        (
            memberId, categoryName, productTitle, productContent, startPrice, expireTime
        )
        values
        (
            #{memberId}, #{categoryName}, #{productTitle}, #{productContent}, #{startPrice}, #{expireTime}
        )

    </insert>

    <!--  이미지 등록  -->
    <insert id="registerImg" parameterType="java.util.List">
        insert into image
        (
            productId, uploadPath, uploadFileName, fileExtension, fileSize
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
             #{item.productId}, #{item.uploadPath}, #{item.uploadFileName}, #{item.fileExtension}, #{item.fileSize}
            )
        </foreach>
    </insert>

    <!--  입찰 금액 변경  -->
    <update id="updateBidPrice" parameterType="Map">
        update
            product
        set
            bidPrice = #{bidPrice}
        where
            productId = #{productId}
        and
            isProductCheck = 1
    </update>

    <!--  낙찰에 실패한  -->
    <select id="notSuccessBidProductIds" resultType="Integer">
        <![CDATA[
        select
            productId
        from
            product
        where
            expireTime <= now()
        and
            isProductCheck = 1
        and
            product.bidPrice is null
        ]]>
    </select>

    <!--  낙찰 성공한  -->
    <select id="successBidProductIds" resultType="Integer">
        <![CDATA[
        select
            productId
        from
            product
        where
            expireTime <= now()
        and
            isProductCheck = 1
        and
            product.bidPrice is not null
        ]]>
    </select>

    <insert id="insertSuccessBidInfo" parameterType="List">
        <foreach collection="list" item="item" close=";" separator=";">
            insert into
                successBid (productId, bidNo, memberId, bidMemberId, bidPrice)
            select
                product.productId as productId, bidNo, memberId, bidMemberId, product.bidPrice from product
            inner join
                bid on product.productId = bid.productId
            where
                product.bidPrice is not null and product.bidPrice = bid.bidPrice and
            product.productId = #{item}
        </foreach>
    </insert>

    <!--  게시물 마감하기  -->
    <update id="closeProducts" parameterType="Integer">
        <foreach collection="list" item="item" separator=";" close=";">
            update product
            <set>
                isProductCheck = 0
            </set>
            where
                productId = #{item}
            and
                isProductCheck = 1
        </foreach>
    </update>

    <select id="successNo" parameterType="Integer" resultType="int">
        select successBidNo from successBid where productId = #{productId}
    </select>
</mapper>